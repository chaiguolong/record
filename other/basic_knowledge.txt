1.进程和线程:
1>.进程:
    对于操作系统来说,一个任务就是一个进程(Process).
    比如打开一个浏览器就是启动一个浏览器进程,
    打开一个记事本就启动了一个记事本进程,
    打开两个记事本就启动了两个记事本进程,
    打开一个Word就启动了一个Word进程.
2>.线程:
    有些进程还不止同时干一件事,
    比如Word,它可以同时进行打字、拼写检查、打印等事情.
    在一个进程内部,要同时干多件事,就需要同时运行多个“子任务”，
    我们把进程内的这些“子任务”称为线程(Thread).

   +----------------------------------------------------------+
   |子程序,或者称为函数,在所有语言中都是层级调用,             |
   |比如A调用B,B在执行过程中又调用了C,C执行完毕返回,          |
   |B执行完毕返回,最后是A执行完毕。                           |
   |                                                          |
   |所以子程序调用是通过栈实现的，一个线程就是执行一个子程序。|
   |子程序调用总是一个入口,一次返回,调用顺序是明确的.         |
   +----------------------------------------------------------+

3>.硬盘分区有三种，主磁盘分区、扩展磁盘分区、逻辑分区.
    1.主引导记录包含一个64个字节的硬盘分区表.由于每个分区信息需要16个字节,
    所以对于采用MBR型分区结构的硬盘,最多只能识别4个主要分区(Primary partition).
    所以对于一个采用此种分区结构的硬盘来说,想要得到4个以上的主要分区是不可能的.
    这里就需要引出扩展分区了.扩展分区也是主要分区的一种,但它与主分区的不同在于理论上可以划分为无数个逻辑分区

    2.扩展磁盘分区就是为了能模拟出多个磁盘分区(解决只有4个分区的限制).
  +-----------------------------------------------------------------------------------------------------------+
  | 一个硬盘主分区至少有1个,最多4个,扩展分区可以没有,最多1个.                                                 |
  | 且主分区+扩展分区总共不能超过4个。逻辑分区可以有若干个.                                                   |
  | 激活的主分区是硬盘的启动分区,他是独立的,也是硬盘的第一个分区,正常分的话就是C驱.                           |
  | 分出主分区后,其余的部分可以分成扩展分区,一般是剩下的部分全部分成扩展分区,也可以不全分,那剩的部分就浪费了. |
  | 但扩展分区是不能直接用的,他是以逻辑分区的方式来使用的,所以说扩展分区可分成若干逻辑分区.                   |
  | 他们的关系是包含的关系,所有的逻辑分区都是扩展分区的一部分.                                                |
  +-----------------------------------------------------------------------------------------------------------+

4>.linux中date命令使用与记忆.
    date +xxx:(时分秒用大写,年月日用小写,完整年份用大写)
  +--------------------------------+
  | %H : 小时(00..23)              |
  | %M : 分钟(00..59)              |
  | %S : 秒(00..59)                |
  +--------------------------------+
  | %d : 日 (01..31)               |
  | %m : 月份 (01..12)             |
  | %y : 年份的最后两位数字 (00.99)|
  +--------------------------------+
  | %Y : 完整年份 (0000..9999)     |
  +--------------------------------+

5>.shell中命令替换(``和$()).
6>.IFS=$'\n'与IFS='\n'的区别:
    简而言之，IFS=$'\n'将newline分配\n给variable IFS。
    $'string'构造是一种引用机制,用于解码类似ANSI C的转义序列.
    这句法来自ksh93,并被移植到现代的外壳一样bash，zsh，pdksh，busybox sh
7>.在Linux中，目录名和文件名中包含空格当然是合法的
8>.linux中出现在终端划鼠标滚轮出现乱码,可以输入reset命令,然后回车.
9>.centos8中安装jdk要安装devel版本,不然没有javac,jar等命令
10>.htop命令:显示cpu,内存等信息
11>.Homebrew长期没有更新,导致本地证书过期解决办法:
	1>.echo insecure >> ~/.curlrc
	2>.HOMEBREW_CURLRC=1
	3>.export HOMEBREW_CURLRC
	4>.brew install git



































