1.7.classpath指定:set classpath=.
2.2.7.表达式由操作数和运算符所组成.操作数可以是常量,变量,也可以是方法.
	  运算符是"+","-","*","/"等.
4.1.1. 1).声明常量的语法: final 数据类型 常量名称[=值]
4.2.1.声明一个变量是,编译程序会在内存里开辟一块足以容纳此变量的内存空间给它.不管变量的值如何改变,都永远使用相同的内存空间.因此,善勇变量是一种节省内存的方式.
4.2.2.变量也是一种标识符,所以它也遵循标识符的命名规则:
	1).变量名可由任意顺序的大小写字母,数字,下划线(_)和美元符号($)等组成.
	2).变量名不能以数字开头.
	3).变量名不能是Java中的保留关键字.
4.2.3.按作用范围进行划分,变量分为成员变量和局部变量.
	1).成员变量:在类体中定义的变量为成员变量.它的作用范围是整个类.
	2).局部变量:Java可以在程序任何地方声明变量,当然也可以在循环里声明.有趣
		的是,在循环里声明的变量只是局部变量,只要跳出循环,这个变量便不能使用.
5.2.double类型:共8个字节,64位,第1位为符号位,中间11位表示指数,最后52位表示尾数.
	float类型:共4个字节,32位,第1位为符号位,中间8位表示指数,最后23位尾数.
5.5.数据类型的转换方式可分为"自动类型转换"及"强制类型转换"两种.
5.5.1.自动类型转换的条件:
	1). 转换前的数据类型与转换后的数据类型兼容.
	2). 转换后的数据类型的表示范围比转换前的数据类型大.
6.1.程序是由许多语句组成的,而语句的基本单位就是表达式和运算符.Java的运算符可分为4类:算术运算符,关系运算符,逻辑运算符和位运算符.
6.2.6表达式类型转换的规则:
	1).占用字节较少的类型转换成占用字节较多的类型.
	2).字符类型会转换成int类型
	3).int类型会转换成float类型
	4).表达式中若某个操作数的类型为double,则另一个操作数也会转换成double.
	5).布尔类型不能转换成其他类型.
8.1.1.要使用Java数组,必须经过一下两个步骤:
	1). 声明数组:				数据类型 数组名[];
	2). 分配内存给该数组:		数组名 = new 数据类型[个数];
9.5.3.使用构造方法的时候需注意以下两点:
	1). 它具有与类名相同的名称.
	2). 它没有返回值.
11.2.抽象类中声明构造方法后,在子类中必须明确调用.
11.3.接口与抽象类的区别:
	1).接口里的数据成员必须初始化,且数据成员均为常量.
	2).接口里的方法必须全部声明为abstract,也就是说,接口不能像抽象类一样保有一般的方法,必须全部是"抽象方法".
12.2.2.在方法中定义的内部类只能访问方法中的final类型的局部变量,因为用final定义的局部变量相当于一个常量,它的生命周期超出方法运行的生命周期.
19.7.通过控制run方法中循环条件的方式来结束一个线程的方法是值得推荐使用的方法,这也是实际中用的最多的方法.
